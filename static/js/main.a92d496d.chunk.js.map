{"version":3,"sources":["images/face-waiting.png","images/face-talking.png","Components/VideoFeed.js","Components/Title.js","Components/CurrentEmotion.js","Greetings.js","Components/RoboFace.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","VideoFeed","componentDidMount","a","loadNewModel","setInputDevice","MODEL_URL","process","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","navigator","mediaDevices","enumerateDevices","then","devices","filter","device","kind","length","setState","facingMode","startVideoFeed","interval","setInterval","videoFeed","componentWillUnmount","clearInterval","video","document","getElementById","withFaceLandmarks","withFaceExpressions","detections","console","log","state","emotion","Object","keys","expressions","find","key","props","getCurrentEmotion","detectFace","webcam","React","createRef","classes","this","videoConstraints","width","height","Paper","elevation","className","root","style","display","id","audio","ref","screenshotFormat","borderRadius","Component","withStyles","theme","flexGrow","margin","marginTop","marginBottom","useStyles","makeStyles","menuButton","marginRight","spacing","title","fontSize","subtitle","fontStyle","Title","AppBar","position","color","borderTopRightRadius","borderTopLeftRadius","Toolbar","Typography","variant","align","CurrentEmotion","isFace","padding","toUpperCase","NEUTRAL","HAPPY","SAD","SURPRISED","ANGRY","RoboFace","useState","cEmotion","setCEmotion","speak","text","getVoices","synth","window","speechSynthesis","uttherThis","SpeechSynthesisUtterance","Grid","container","justify","item","xs","textAlign","alt","src","robotTalkingImg","robotWaitingImg","getRoboFace","GREETINGS","getGreeting","App","showLandmarks","e","preventDefault","Container","maxWidth","getCurrentAge","getCurrentGender","Boolean","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a92d496d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face-waiting.a30a2d17.png\";","module.exports = __webpack_public_path__ + \"static/media/face-talking.e88949cc.png\";","import React from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Paper, withStyles } from \"@material-ui/core\";\nimport * as faceapi from \"face-api.js\";\n\nconst Styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: \"0 auto\",\n    width: \"90%\",\n    height: \"90%\",\n    marginTop: \"1rem\",\n    marginBottom: \"1rem\",\n    borderRadius: \"20px\",\n  },\n});\n\nconst WIDTH = 300;\nconst HEIGHT = 300;\n\nclass VideoFeed extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      facingMode: null,\n      detections: null,\n    };\n    this.webcam = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    await this.loadNewModel();\n    this.setInputDevice();\n  };\n\n  loadNewModel = async () => {\n    const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n    await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\n    await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\n    await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\n    await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);\n  };\n\n  setInputDevice = () => {\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\n      const inputDevice = await devices.filter(\n        (device) => device.kind === \"videoinput\"\n      );\n      if (inputDevice.length < 2) {\n        await this.setState({\n          facingMode: \"user\",\n        });\n      } else {\n        await this.setState({\n          facingMode: \"user\",\n        });\n      }\n      this.startVideoFeed();\n    });\n  };\n\n  startVideoFeed = () => {\n    this.interval = setInterval(() => {\n      this.videoFeed();\n    }, 2000);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  };\n\n  videoFeed = async () => {\n    const video = document.getElementById(\"video\");\n\n    const detections = await faceapi\n      .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n      .withFaceLandmarks()\n      .withFaceExpressions();\n\n    await this.setState({\n      detections,\n    });\n\n    console.log(detections);\n\n    if (this.state.detections.length > 0) {\n      const emotion = Object.keys(detections[0].expressions).find(\n        (key) => detections[0].expressions[key] > 0.5\n      );\n      this.props.getCurrentEmotion(emotion);\n      this.props.detectFace(true);\n    } else {\n      this.props.detectFace(false);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { facingMode } = this.state;\n    let videoConstraints = null;\n    // let camera = '';\n\n    if (facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode,\n      };\n\n      // if(facingMode === 'user') {\n      //     camera = 'Front';\n      // } else {\n      //     camera = 'Back';\n      // }\n    }\n\n    return (\n      <Paper elevation={0} className={classes.root}>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            // display: 'flex',\n            // justifyContent : 'center',\n            // alignItems: 'center',\n            display: \"none\",\n          }}\n        >\n          <Webcam\n            id=\"video\"\n            audio={false}\n            width={WIDTH}\n            height={HEIGHT}\n            ref={this.webcam}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n            style={{ borderRadius: \"20px\" }}\n          />\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(Styles)(VideoFeed);\n","import React from 'react';\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      fontSize:' 1.25rem',\n    },\n    subtitle: {\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        fontStyle: 'italic',\n        fontSize:'.6rem'\n    }\n  }));\n\nconst Title = () => {\n\n    const classes = useStyles();\n\n    return(\n        <div>\n            <AppBar position=\"static\" color='primary' style={{borderTopRightRadius: '20px',borderTopLeftRadius: '20px' }}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        RoboAssist\n                    </Typography>\n                    {/* <Button color=\"inherit\">Name</Button> */}\n                </Toolbar>\n            </AppBar>\n            <Typography className={classes.subtitle} align='center' display='block' variant='button' >An App That Detects Facial Emotions In Real-Time</Typography>\n        </div>\n    )\n}\n\nexport default Title;","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\n\nconst CurrentEmotion = ({emotion, isFace}) => {\n    return(\n        <div style={{margin: '0 auto', marginTop: '1rem', width:'80%'}}>\n            <Paper elevation={3} style={{padding: '1rem'}}>\n                <Typography style={{marginBottom: '.5rem'}} align='center' variant='body2'>CURRENT EXPRESSION:</Typography>\n                <Typography align='center' variant='subtitle2'>\n                    {isFace? emotion.toUpperCase() : 'LOADING...'}\n                </Typography>\n            </Paper>\n        </div>\n    )\n}\n\nexport default CurrentEmotion;","export const NEUTRAL = \"Hi, I'm Robo Assist, I would like to welcome you to the building, is there anything I can do to assist you.?\";\nexport const HAPPY = \"Hi, I'm Robo Assist, I can see you are having a good day, how can I be of assistance to you?\";\nexport const SAD = \"Hi, I'm Robo Assist, I can see you may need help, is there anything I can do to make you feel better.?\";\nexport const SURPRISED = \"Hi, I'm Robo Assist, it looks like you are happy to be here, is there anything I can do to assist you.?\";\nexport const ANGRY = \"Hi, I'm Robo Assist, it seems you are having difficulty, is there anything I can do to assist you.?\";","import React, {useState } from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport robotWaitingImg from \"../images/face-waiting.png\";\nimport robotTalkingImg from \"../images/face-talking.png\";\nimport * as GREETINGS from '../Greetings';\n\nconst RoboFace = ({ emotion, isFace }) => {\n    const [cEmotion, setCEmotion] = useState('');\n\n    const speak = (text) => {\n        if(isFace) {\n            if(emotion !== cEmotion) {\n                getVoices(text)\n                setCEmotion(emotion)\n            }\n        }\n    }\n    \n    const getVoices = (text) => {\n        const synth = window.speechSynthesis\n        // const voices = window.speechSynthesis.getVoices()\n        const uttherThis = new SpeechSynthesisUtterance(text)\n        synth.speak(uttherThis)\n        // speechSynthesis.cancel()\n        // console.log('speaker', voices[51])\n    }\n\n  const getGreeting = (emotion) => {\n    switch (emotion) {\n      case \"neutral\":\n          speak(GREETINGS.NEUTRAL)\n        return GREETINGS.NEUTRAL;\n      case \"happy\":\n        speak(GREETINGS.HAPPY)\n        return GREETINGS.HAPPY;\n      case \"sad\":\n        speak(GREETINGS.SAD)\n        return GREETINGS.SAD;\n      case \"surprised\":\n        speak(GREETINGS.SURPRISED)\n        return GREETINGS.SURPRISED;\n      case \"angry\":\n        speak(GREETINGS.ANGRY)\n        return GREETINGS.ANGRY;\n      default:\n        return \"\";\n    }\n  };\n\n  const getRoboFace = (isFace) => {\n    return isFace ? robotTalkingImg : robotWaitingImg;\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={8} style={{ textAlign: \"center\" }}>\n        <Paper style={{ padding: \"1rem\", height: \"50vh\" }}>\n          <div id=\"roboImage\">\n            <img alt='roboface' src={getRoboFace(isFace)} />\n          </div>\n          {isFace ? getGreeting(emotion) : <p>Waiting For Client...</p>}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RoboFace;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container, Paper, Grid } from \"@material-ui/core\";\nimport VideoFeed from \"./Components/VideoFeed\";\nimport Title from \"./Components/Title\";\nimport CurrentEmotion from \"./Components/CurrentEmotion\";\nimport RoboFace from \"./Components/RoboFace\";\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emotion: \"\",\n      isFace: false,\n    };\n  }\n\n  getCurrentEmotion = (emotion) => {\n    this.setState({ emotion });\n  };\n\n  showLandmarks = (e) => {\n    e.preventDefault();\n    this.setState({\n      showLandmarks: !this.state.showLandmarks,\n    });\n  };\n\n  detectFace = (isFace) => {\n    if (isFace) {\n      this.setState({\n        isFace: true,\n      });\n    } else {\n      this.setState({\n        isFace: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Container\n        maxWidth=\"sm\"\n        style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}\n      >\n        <Paper elevation={3} style={{ borderRadius: \"20px\" }}>\n          <Title />\n          <hr style={{ width: \"60%\" }} />\n          <RoboFace isFace={this.state.isFace} emotion={this.state.emotion} />\n          <VideoFeed\n            detectFace={this.detectFace}\n            getCurrentEmotion={this.getCurrentEmotion}\n            getCurrentAge={this.getCurrentAge}\n            getCurrentGender={this.getCurrentGender}\n            showLandmarks={this.state.showLandmarks}\n          />\n          <hr style={{ width: \"60%\" }} />\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item xs={12}>\n              <CurrentEmotion isFace={this.state.isFace} emotion={this.state.emotion} />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}